############################################################################
# Quake Makefile for Raspberry Pi
#
# Notes
#	debug_gl, release_gl, debug_sw set up the target (targets_gl/targets_sw) 
#	we will use and the ${BUILDDIR} and ${CFLAGS} as these change depending on 
#	the configuration
#	
############################################################################

BASEVERSION=1.09
VERSION=$(BASEVERSION)
MOUNT_DIR=$(shell pwd)

BUILD_DEBUG_DIR=debug$(ARCH)
BUILD_RELEASE_DIR=release$(ARCH)

## POTENTIAL COMPILER FLAGS ##

BASE_CFLAGS=-Dstricmp=strcasecmp $(CFLAGS) -DUSE_HALF_FLOATS=1 -mfp16-format=alternative -march=armv6 -mfpu=vfp -mfloat-abi=hard
DEBUG_CFLAGS=$(BASE_CFLAGS) -g -DRELEASE_BUILD=0
RELEASE_CFLAGS=$(BASE_CFLAGS) -O3 -ffast-math -funroll-loops -fomit-frame-pointer -fexpensive-optimizations -DRELEASE_BUILD=1
GL_FLAGS=-DGLQUAKE -DUSE_GLES

## POTENTIAL LINKER FLAGS ##

# TODO, move them in here

## POSSIBLE TARGETS ##

TARGETS=$(BUILDDIR)/bin/glquake
TARGETSSW=$(BUILDDIR)/bin/squake

############################################################################
# compilation macros
# 	$@ <- the TARGET
# 	$< <- the DEPENDENCY / PREREQUISITE
############################################################################

DO_CC=$(CC) $(CFLAGS) $(INCLUDES) -o $@ -c $<

#############################################################################
# SETUP AND BUILD
#############################################################################

debug_gl:
	@-mkdir -p  $(BUILD_DEBUG_DIR) \
				$(BUILD_DEBUG_DIR)/bin
	@echo "- - - - - - - - - - - - - - - - - - "
	@echo "Debug GL Build : "
	@echo "	targets : $(TARGETS)"
	@echo "	build dir : $(BUILD_DEBUG_DIR)"
	@echo "	mount dir : $(MOUNT_DIR)"
	@echo "- - - - - - - - - - - - - - - - - - "
	$(MAKE) -f make.rpi targets_gl BUILDDIR=$(BUILD_DEBUG_DIR) CFLAGS="$(DEBUG_CFLAGS) ${GL_FLAGS}"

debug_sw:
	@-mkdir -p  $(BUILD_DEBUG_DIR) \
				$(BUILD_DEBUG_DIR)/bin
	@echo "- - - - - - - - - - - - - - - - - - "
	@echo "Debug Software Build : "
	@echo "	targets : $(TARGETSSW)"
	@echo "	build dir : $(BUILD_DEBUG_DIR)"
	@echo "	mount dir : $(MOUNT_DIR)"
	@echo "- - - - - - - - - - - - - - - - - - "
	$(MAKE) -f make.rpi targets_sw BUILDDIR=$(BUILD_DEBUG_DIR) CFLAGS="$(DEBUG_CFLAGS)"

release_gl:
	@-mkdir -p  $(BUILD_RELEASE_DIR) \
				$(BUILD_RELEASE_DIR)/bin
	@echo "- - - - - - - - - - - - - - - - - - "
	@echo "Release GL Build : "
	@echo "	targets : $(TARGETS)"
	@echo "	build dir : $(BUILD_RELEASE_DIR)"
	@echo "	mount dir : $(MOUNT_DIR)"
	@echo "- - - - - - - - - - - - - - - - - - "
	$(MAKE) -f make.rpi targets_gl BUILDDIR=$(BUILD_RELEASE_DIR) CFLAGS="$(RELEASE_CFLAGS) ${GL_FLAGS}"

targets_gl: $(TARGETS)
targets_sw: $(TARGETSSW)

#############################################################################
# ALL SOURCE FILES
#	will use makefile magic to replace the leading = with the actual directory
#############################################################################
CM_SOURCES= \
			cl_demo.cpp \
			cl_input.cpp \
			cl_main.cpp \
			cl_parse.cpp \
			cl_tent.cpp \
			chase.cpp \
			cmd.cpp \
			common.cpp \
			console.cpp \
			crc.cpp \
			cvar.cpp \
			host.cpp \
			host_cmd.cpp \
			keys.cpp \
			menu.cpp \
			mathlib.cpp \
			net_dgrm.cpp \
			net_loop.cpp \
			net_main.cpp \
			net_vcr.cpp \
			net_udp.cpp \
			net_bsd.cpp \
			pr_cmds.cpp \
			pr_edict.cpp \
			pr_exec.cpp \
			r_part.cpp \
			sbar.cpp \
			sv_main.cpp \
			sv_phys.cpp \
			sv_move.cpp \
			sv_user.cpp \
			zone.cpp	\
			view.cpp	\
			wad.cpp \
			world.cpp \
			cd_linux.cpp \
			sys_rpi.cpp \
			snd_rpi.cpp \
			snd_dma.cpp \
			snd_mem.cpp \
			snd_mix.cpp \
			in_rpi.cpp

SW_SOURCES= \
			vid_svgalib.cpp \
			draw.cpp \
			model.cpp \
			r_efrag.cpp \
			r_light.cpp \
			r_main.cpp \
			r_misc.cpp \
			d_surf.cpp \
			screen.cpp \
			nonintel.cpp \
			d_edge.cpp \
			d_fill.cpp \
			d_init.cpp \
			d_modech.cpp \
			d_part.cpp \
			d_polyse.cpp \
			d_scan.cpp \
			d_sky.cpp \
			d_sprite.cpp \
			d_vars.cpp \
			d_zpoint.cpp \
			r_aclip.cpp \
			r_alias.cpp \
			r_bsp.cpp \
			r_draw.cpp \
			r_edge.cpp \
			r_sky.cpp \
			r_sprite.cpp \
			r_surf.cpp \
			r_vars.cpp \
			snd_linux.cpp

GL_SOURCES= \
			gl_vidrpi.cpp\
			gl_draw.cpp \
			gl_mesh.cpp \
			gl_model.cpp \
			gl_refrag.cpp \
			gl_rlight.cpp \
			gl_rmain.cpp \
			gl_rmisc.cpp \
			gl_rsurf.cpp \
			gl_screen.cpp \
			gl_test.cpp \
			gl_warp.cpp \
			platform.pi.cpp\
			modern_gles_port.cpp\
			shader_gles.cpp \
			vector.cpp \
			matrix.cpp \
			transforms.cpp

#############################################################################
# ALL OBJECT FILES
#	using a string replacement tool and the above list
#		https://www.gnu.org/software/make/manual/html_node/Text-Functions.html
#
#	URGH, we need to make sure the make files are picked up from the correct place
#	this nonsense below adds $(MOUNT_DIR)/$(BUILDDIR)/ to all the files in 
#	$(CM_OBJECTS) & $(GL_OBJECTS)
#
#############################################################################

CM_OBJECTS=$(addprefix $(MOUNT_DIR)/$(BUILDDIR)/, $(CM_SOURCES:.cpp=.o))
SW_OBJECTS=$(addprefix $(MOUNT_DIR)/$(BUILDDIR)/, $(SW_SOURCES:.cpp=.o))
GL_OBJECTS=$(addprefix $(MOUNT_DIR)/$(BUILDDIR)/, $(GL_SOURCES:.cpp=.o))

#############################################################################
# OBJECT to elf rule (target is the elf file, prerequisite/dependency is the objects list)
#
# 	# https://www.gnu.org/software/make/manual/html_node/Automatic-Variables.html
#############################################################################

$(BUILDDIR)/bin/glquake : $(CM_OBJECTS) $(GL_OBJECTS)
	$(CC) $(CFLAGS) -o $@ $(CM_OBJECTS) $(GL_OBJECTS) $(LDFLAGS)

#############################################################################
# C to OBJECT rule (target is a .o file the .c file is the dependency)
#	we use the .o output dir to match these  
#
#
#
# 	https://www.gnu.org/software/make/manual/html_node/Automatic-Variables.html
# 		$@ <- the TARGET
# 		$< <- the DEPENDENCY / PREREQUISITE
#  	% is a wildcard in this case
#############################################################################

$(MOUNT_DIR)/$(BUILDDIR)/%.o: $(MOUNT_DIR)/%.c
	$(DO_CC)


#############################################################################
# OLD STUFF 
#############################################################################
#$(BUILDDIR)/glquake/math.o :         $(MOUNT_DIR)/math.s
#	$(DO_GL_AS)

#############################################################################
# MISC
#############################################################################
clean: clean-debug clean-release

clean-debug:
	$(MAKE) -f make.rpi actual_clean BUILDDIR=$(BUILD_DEBUG_DIR) CFLAGS="$(DEBUG_CFLAGS)"

clean-release:
	$(MAKE) -f make.rpi actual_clean BUILDDIR=$(BUILD_RELEASE_DIR) CFLAGS="$(DEBUG_CFLAGS)"

actual_clean:
	-rm -f $(CM_OBJECTS) $(SW_OBJECTS) $(GL_OBJECTS) 